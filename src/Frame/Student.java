/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;
import EncoderAndDecoder.DeCoder;
import EncoderAndDecoder.EnCoder;
import beanClass.*;
import databaseManager.DatabaseManager;
//import static databaseManager.DatabaseManager.getFaculty;
import java.awt.event.ActionEvent;
import java.util.*;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.*;

/**
 *
 * @author HP
 */
 public class Student extends javax.swing.JFrame  {

    //
   
    /**
     * Creates new form Student
     */
    public Student() {
         try {
            initComponents();
             getFaculty();
             GenderComboBox.addItem("MALE");
             GenderComboBox.addItem("FEMALE");
             studentIdTextField.setEditable(false);
              GroupTextField.setEditable(false);
               ShiftTextField.setEditable(false);
        } catch (Exception ex) {
            
        }
    }

    private void getFaculty(){
        try{
    Vector v  = DatabaseManager.getFaculty();
   facultyComboBox.removeAllItems();
    for(int i=0; i<v.size();  i++ ){ 
        facultyBean bean =(facultyBean)v.elementAt(i);
        facultyComboBox.addItem(bean);
    } 
        }catch(Exception e){
            e.printStackTrace();
    //         JOptionPane.showMessageDialog(this,"Error"+e.getMessage());
        }
        }
    
          public void actionPerformed(ActionEvent e){
        if(e.getSource()==studentAddButton)
            addRecord();
        if(e.getSource()==studentAddButton){
        // hide();
         dispose();
         } 
        if(e.getSource()==studentAddButton)
            clear();
    }
     private void clear(){
         //facultyComboBox.setItem("");
        remarksTextArea.setText("");
             surnameTextField.setText("");
          rollNoTextField.setText("");
                  fatherNameTextField.setText("");
                  studentNameTextField.setText("");
                  studentIdTextField.setText("");
                              
         
        
    }
     private void addRecord(){
         batchBean bean=(batchBean)batchComboBox.getSelectedItem();
          studentBean bean1 =(studentBean)rollNoList.getSelectedValue();
         if(bean==null)return;
            String stdName = studentNameTextField.getText();
            String fName = fatherNameTextField.getText();
            String surname = surnameTextField.getText();
            String rollNo = rollNoTextField.getText();
            String gender=EnCoder.genderEncode((String)GenderComboBox.getSelectedItem());
            String remarks = remarksTextArea.getText();
            try{
                int rows=DatabaseManager.addStudent(bean.getBatchId(),stdName,fName,surname,rollNo,gender,remarks);
                if(rows>=1)
                    JOptionPane.showMessageDialog(this, rows+"Record Insert ");
                clear();
                getStudent();
            }catch(Exception e){
                   JOptionPane.showMessageDialog(this,"Error"+e.getMessage());
                   e.printStackTrace();
            }
    }
    private void updateRecord(){
        studentBean bean=(studentBean)rollNoList.getSelectedValue();
        
         if(bean==null)return ;
         
         
         try{
              String stdName = studentNameTextField.getText();
            String fName = fatherNameTextField.getText();
            String surname = surnameTextField.getText();
            String rollNo = rollNoTextField.getText();
            String gender=EnCoder.genderEncode((String)GenderComboBox.getSelectedItem());
            String remarks = remarksTextArea.getText();
          int rows=DatabaseManager.updateStudent( bean.getBatchId(),bean.getStdId(),stdName, fName, surname,rollNo,gender,remarks);
            
                if(rows>=1)
                    JOptionPane.showMessageDialog(this, rows+"update ");
                clear();
                getStudent();
            }catch(Exception e){
                   JOptionPane.showMessageDialog(this,"Error"+e.getMessage());
                   e.printStackTrace();
            }
         }

    private void deleteRecord(){
    studentBean bean=(studentBean)rollNoList.getSelectedValue();
    if(bean==null)return;
    try{
        int rows = DatabaseManager.deleteStudent(bean.getStdId());
          if(rows>=1)
                    JOptionPane.showMessageDialog(this, rows+" Delete ");
                clear();
                   getStudent();
            }catch(Exception e){
                   JOptionPane.showMessageDialog(this,"Error"+e.getMessage());
                   e.printStackTrace();
            }
         } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        studentLabel = new javax.swing.JLabel();
        facultyStudentLabel = new javax.swing.JLabel();
        departmentStudentLabel = new javax.swing.JLabel();
        programStudentLabel = new javax.swing.JLabel();
        StudentBatchYearLabel = new javax.swing.JLabel();
        studentShiftLabel = new javax.swing.JLabel();
        studentIdLabel = new javax.swing.JLabel();
        studentNameLabel = new javax.swing.JLabel();
        fatherNameLabel = new javax.swing.JLabel();
        surnameLabel = new javax.swing.JLabel();
        roolNoLabel = new javax.swing.JLabel();
        studentGroupLabel = new javax.swing.JLabel();
        ShiftTextField = new javax.swing.JTextField();
        GroupTextField = new javax.swing.JTextField();
        studentIdTextField = new javax.swing.JTextField();
        studentNameTextField = new javax.swing.JTextField();
        fatherNameTextField = new javax.swing.JTextField();
        surnameTextField = new javax.swing.JTextField();
        rollNoListLabel = new javax.swing.JLabel();
        rollNoTextField = new javax.swing.JTextField();
        GenderLabel = new javax.swing.JLabel();
        StudentRemarkLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        rollNoList = new javax.swing.JList();
        studentAddButton = new javax.swing.JButton();
        studentUpdateButton = new javax.swing.JButton();
        studentDeleteButton = new javax.swing.JButton();
        studentClearButton = new javax.swing.JButton();
        studentBackButton = new javax.swing.JButton();
        batchComboBox = new javax.swing.JComboBox();
        programComboBox = new javax.swing.JComboBox();
        departmentComboBox = new javax.swing.JComboBox();
        facultyComboBox = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        remarksTextArea = new javax.swing.JTextArea();
        GenderComboBox = new javax.swing.JComboBox<>();
        pictureLabel = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(800, 800));
        getContentPane().setLayout(null);

        studentLabel.setFont(new java.awt.Font("Castellar", 1, 24)); // NOI18N
        studentLabel.setText("Student");
        getContentPane().add(studentLabel);
        studentLabel.setBounds(280, 0, 160, 70);

        facultyStudentLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        facultyStudentLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        facultyStudentLabel.setText("FACULTY");
        facultyStudentLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(facultyStudentLabel);
        facultyStudentLabel.setBounds(60, 80, 70, 30);

        departmentStudentLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        departmentStudentLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        departmentStudentLabel.setText("DEPARTMENT");
        getContentPane().add(departmentStudentLabel);
        departmentStudentLabel.setBounds(30, 120, 90, 30);

        programStudentLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        programStudentLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        programStudentLabel.setText("PROGRAM");
        getContentPane().add(programStudentLabel);
        programStudentLabel.setBounds(50, 160, 80, 30);

        StudentBatchYearLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        StudentBatchYearLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        StudentBatchYearLabel.setText("BATCH");
        getContentPane().add(StudentBatchYearLabel);
        StudentBatchYearLabel.setBounds(70, 210, 40, 20);

        studentShiftLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        studentShiftLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        studentShiftLabel.setText("SHIFT");
        getContentPane().add(studentShiftLabel);
        studentShiftLabel.setBounds(70, 240, 40, 30);

        studentIdLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        studentIdLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        studentIdLabel.setText("STUDENT ID");
        getContentPane().add(studentIdLabel);
        studentIdLabel.setBounds(40, 280, 70, 30);

        studentNameLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        studentNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        studentNameLabel.setText("STUDENT NAME");
        getContentPane().add(studentNameLabel);
        studentNameLabel.setBounds(20, 320, 100, 30);

        fatherNameLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        fatherNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        fatherNameLabel.setText("FATHER NAME");
        getContentPane().add(fatherNameLabel);
        fatherNameLabel.setBounds(30, 360, 80, 30);

        surnameLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        surnameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        surnameLabel.setText("SURNAME");
        getContentPane().add(surnameLabel);
        surnameLabel.setBounds(50, 410, 60, 30);

        roolNoLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        roolNoLabel.setText("ROLL NO");
        getContentPane().add(roolNoLabel);
        roolNoLabel.setBounds(60, 460, 60, 30);

        studentGroupLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        studentGroupLabel.setText("GROUP");
        getContentPane().add(studentGroupLabel);
        studentGroupLabel.setBounds(280, 240, 60, 20);

        ShiftTextField.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(ShiftTextField);
        ShiftTextField.setBounds(120, 240, 120, 30);

        GroupTextField.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(GroupTextField);
        GroupTextField.setBounds(350, 240, 110, 30);

        studentIdTextField.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(studentIdTextField);
        studentIdTextField.setBounds(120, 280, 80, 30);

        studentNameTextField.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(studentNameTextField);
        studentNameTextField.setBounds(120, 320, 340, 30);

        fatherNameTextField.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(fatherNameTextField);
        fatherNameTextField.setBounds(120, 360, 340, 30);

        surnameTextField.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(surnameTextField);
        surnameTextField.setBounds(120, 410, 340, 30);

        rollNoListLabel.setBackground(new java.awt.Color(204, 204, 204));
        rollNoListLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rollNoListLabel.setText("RollNoList");
        rollNoListLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(rollNoListLabel);
        rollNoListLabel.setBounds(470, 220, 90, 20);

        rollNoTextField.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(rollNoTextField);
        rollNoTextField.setBounds(120, 460, 150, 30);

        GenderLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        GenderLabel.setText("GENDER");
        getContentPane().add(GenderLabel);
        GenderLabel.setBounds(280, 460, 70, 30);

        StudentRemarkLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        StudentRemarkLabel.setText("REMARKS");
        getContentPane().add(StudentRemarkLabel);
        StudentRemarkLabel.setBounds(50, 525, 70, 30);

        rollNoList.setForeground(new java.awt.Color(0, 153, 153));
        rollNoList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                rollNoListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(rollNoList);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(470, 240, 220, 250);

        studentAddButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        studentAddButton.setText("ADD");
        studentAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentAddButtonActionPerformed(evt);
            }
        });
        getContentPane().add(studentAddButton);
        studentAddButton.setBounds(120, 630, 80, 30);

        studentUpdateButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        studentUpdateButton.setText("UPDATE");
        studentUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentUpdateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(studentUpdateButton);
        studentUpdateButton.setBounds(237, 630, 90, 30);

        studentDeleteButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        studentDeleteButton.setText("DELETE");
        studentDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDeleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(studentDeleteButton);
        studentDeleteButton.setBounds(450, 630, 120, 30);

        studentClearButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        studentClearButton.setText("CLEAR");
        studentClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentClearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(studentClearButton);
        studentClearButton.setBounds(350, 630, 90, 30);

        studentBackButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        studentBackButton.setText("BACK");
        studentBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentBackButtonActionPerformed(evt);
            }
        });
        getContentPane().add(studentBackButton);
        studentBackButton.setBounds(580, 630, 110, 30);

        batchComboBox.setForeground(new java.awt.Color(102, 102, 102));
        batchComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batchComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(batchComboBox);
        batchComboBox.setBounds(120, 200, 340, 30);

        programComboBox.setForeground(new java.awt.Color(0, 0, 204));
        programComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(programComboBox);
        programComboBox.setBounds(120, 160, 340, 30);

        departmentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(departmentComboBox);
        departmentComboBox.setBounds(120, 120, 340, 30);

        facultyComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facultyComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(facultyComboBox);
        facultyComboBox.setBounds(120, 80, 340, 30);

        remarksTextArea.setColumns(20);
        remarksTextArea.setRows(5);
        jScrollPane2.setViewportView(remarksTextArea);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(120, 520, 570, 96);

        getContentPane().add(GenderComboBox);
        GenderComboBox.setBounds(346, 460, 110, 30);

        pictureLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        getContentPane().add(pictureLabel);
        pictureLabel.setBounds(474, 80, 200, 110);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void studentUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentUpdateButtonActionPerformed
        // TODO add your handling code here:
        updateRecord();
    }//GEN-LAST:event_studentUpdateButtonActionPerformed

    private void facultyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facultyComboBoxActionPerformed
        // TODO add your handling code here:
        getDepartment();
    }//GEN-LAST:event_facultyComboBoxActionPerformed

    private void departmentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentComboBoxActionPerformed
        // TODO add your handling code here:
        getProgram();
    }//GEN-LAST:event_departmentComboBoxActionPerformed

    private void programComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programComboBoxActionPerformed
        // TODO add your handling code here:
        getBatch();
    }//GEN-LAST:event_programComboBoxActionPerformed

    private void rollNoListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_rollNoListValueChanged
        // TODO add your handling code here:
        studentBean bean =(studentBean)rollNoList.getSelectedValue();
         
        if(bean==null)return;{
          ImageIcon icon = new ImageIcon("picture/"+bean.getStdId()+".jpg");
        pictureLabel.setIcon(icon);
        studentIdTextField.setText(""+bean.getStdId());
        studentNameTextField.setText(bean.getStdName());
        fatherNameTextField.setText(bean.getFName());
        surnameTextField.setText(bean.getSurname());
        rollNoTextField.setText(""+bean.getRollNo());
        //String gender=DeCoder.genderDecode(bean.getGender());
        GenderComboBox.setSelectedItem(DeCoder.genderDecode(bean.getGender()));
        remarksTextArea.setText(bean.getRemarks());
    }
    }//GEN-LAST:event_rollNoListValueChanged

    private void studentBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentBackButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_studentBackButtonActionPerformed

    private void batchComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batchComboBoxActionPerformed
        // TODO add your handling code here:
        getStudent();
    }//GEN-LAST:event_batchComboBoxActionPerformed

    private void studentClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentClearButtonActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_studentClearButtonActionPerformed

    private void studentAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentAddButtonActionPerformed
        // TODO add your handling code here:
        addRecord();
    }//GEN-LAST:event_studentAddButtonActionPerformed

    private void studentDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDeleteButtonActionPerformed
        // TODO add your handling code here:
        deleteRecord();
    }//GEN-LAST:event_studentDeleteButtonActionPerformed

    private void getStudent(){
       
            batchBean bean=(batchBean) batchComboBox.getSelectedItem();
            if(bean==null)return;
            try{
            
                ShiftTextField.setText(DeCoder.shiftDecode(bean.getShift()));
                GroupTextField.setText(DeCoder.groupDecode(bean.getGroupDesc()));
            Vector v=DatabaseManager.getStudent(bean.getBatchId());
            rollNoList.setListData(v);
            

            }//end try-block
            catch(Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(this," Error : "+e.getMessage());
            }//end  catch

        }  
    private void getDepartment(){
            facultyBean bean=(facultyBean) facultyComboBox.getSelectedItem();
            if(bean==null) return;
            try{
                departmentComboBox.removeAllItems();
                 Vector v=DatabaseManager.getDepartment(bean.getFacId());

            for(int i=0;i<v.size();i++){
                departmentBean bean1=(departmentBean)v.elementAt(i);
                departmentComboBox.addItem(bean1);

            }
        }//end try block
        catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,"Error : "+e.getMessage());
        }//end catch
        }
        
           private void getProgram(){
            departmentBean bean=(departmentBean) departmentComboBox.getSelectedItem();
            if(bean==null) return;
            try{
                programComboBox.removeAllItems();
                 Vector v=DatabaseManager.getProgram(bean.getDeptId());
            
            for(int i=0;i<v.size();i++){
                programBean bean1=(programBean)v.elementAt(i);
                programComboBox.addItem(bean1);
               
            }
        }//end try block
        catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,"Error : "+e.getMessage());
        }//end catch
    
        }
             private void getBatch(){
            programBean bean=(programBean) programComboBox.getSelectedItem();
            if(bean==null) return;
            try{
                batchComboBox.removeAllItems();
                 Vector v=DatabaseManager.getBatch(bean.getProgId());
            
            for(int i=0;i<v.size();i++){
                batchBean bean1=(batchBean)v.elementAt(i);
                batchComboBox.addItem(bean1);
               
            }
        }//end try block
        catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,"Error : "+e.getMessage());
        }//end catch
    
        }   
        
     
               
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> GenderComboBox;
    private javax.swing.JLabel GenderLabel;
    private javax.swing.JTextField GroupTextField;
    private javax.swing.JTextField ShiftTextField;
    private javax.swing.JLabel StudentBatchYearLabel;
    private javax.swing.JLabel StudentRemarkLabel;
    private javax.swing.JComboBox batchComboBox;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox departmentComboBox;
    private javax.swing.JLabel departmentStudentLabel;
    private javax.swing.JComboBox facultyComboBox;
    private javax.swing.JLabel facultyStudentLabel;
    private javax.swing.JLabel fatherNameLabel;
    private javax.swing.JTextField fatherNameTextField;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel pictureLabel;
    private javax.swing.JComboBox programComboBox;
    private javax.swing.JLabel programStudentLabel;
    private javax.swing.JTextArea remarksTextArea;
    private javax.swing.JList rollNoList;
    private javax.swing.JLabel rollNoListLabel;
    private javax.swing.JTextField rollNoTextField;
    private javax.swing.JLabel roolNoLabel;
    private javax.swing.JButton studentAddButton;
    private javax.swing.JButton studentBackButton;
    private javax.swing.JButton studentClearButton;
    private javax.swing.JButton studentDeleteButton;
    private javax.swing.JLabel studentGroupLabel;
    private javax.swing.JLabel studentIdLabel;
    private javax.swing.JTextField studentIdTextField;
    private javax.swing.JLabel studentLabel;
    private javax.swing.JLabel studentNameLabel;
    private javax.swing.JTextField studentNameTextField;
    private javax.swing.JLabel studentShiftLabel;
    private javax.swing.JButton studentUpdateButton;
    private javax.swing.JLabel surnameLabel;
    private javax.swing.JTextField surnameTextField;
    // End of variables declaration//GEN-END:variables
}
